// Generated by CoffeeScript 1.6.2
var RunOnCompilePlugin,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

module.exports = RunOnCompilePlugin = (function() {
  RunOnCompilePlugin.prototype.brunchPlugin = true;

  function RunOnCompilePlugin(config) {
    var cfg, _ref, _ref1, _ref2;

    this.config = config;
    this.onCompile = __bind(this.onCompile, this);
    cfg = (_ref = (_ref1 = this.config) != null ? (_ref2 = _ref1.plugins) != null ? _ref2.runOnCompile : void 0 : void 0) != null ? _ref : {};
    if (cfg.command != null) {
      this.runOnCompile = true;
      this.commandToRun = cfg.command;
      this.failureMessage = cfg.failureMessage != null ? cfg.failureMessage : "Command Failed";
    } else {
      this.runOnCompile = false;
    }
  }

  RunOnCompilePlugin.prototype.onCompile = function() {
    var exec;

    if (!this.runOnCompile) {
      return;
    }
    exec = require('child_process').exec;
    return exec(this.commandToRun, function(error, stdout, stderr) {
      var notifier;

      console.log(stdout);
      if (error != null) {
        notifier = require('node-notifier');
        return notifier.notify({
          'title': this.failureMessage,
          'message': stdout.split("\n")[1],
          "subtitle": stdout.split("\n")[1].replace(/[^\w]/gi, ' ')
        });
      }
    });
  };

  return RunOnCompilePlugin;

})();
